services:
    caniplanner_php:
        container_name: caniplanner_php
        build:
            context: .
            dockerfile: docker/php/Dockerfile
        restart: unless-stopped
        env_file: ".env"
        user: ${DOCKER_USER}
        volumes:
            - ./symfony:/www/symfony
        environment:
            DATABASE_URL: ${DATABASE_URL}
        depends_on:
            caniplanner_pg:
                condition: service_healthy
        networks: [ appnet ]

    caniplanner_nextjs:
        container_name: caniplanner_nextjs
        build:
            context: .
            dockerfile: docker/nextjs/Dockerfile
        restart: unless-stopped
        networks: [appnet]

    caniplanner_server:
        container_name: caniplanner_server
        image: nginx:1.25-alpine3.18
        restart: unless-stopped
        working_dir: /www
        volumes:
            - ./symfony:/www/symfony
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
        ports:
            - '8080:80'
        networks: [ appnet ]

    caniplanner_pg:
        container_name: caniplanner_pg
        image: postgres:16-alpine
        restart: always
        env_file: ".env"
        environment:
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_DB: ${POSTGRES_DB}
        volumes:
            - pgdata:/var/lib/postgresql/data
        ports:
            - "127.0.0.1:5432:5432"
        healthcheck:
            test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
            interval: 10s
            retries: 5
        networks: [appnet]

volumes:
    pgdata:

networks:
    appnet: