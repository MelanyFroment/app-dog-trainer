name: symfony

on:
    push:
        branches: [main, dev]
        paths:
            - 'symfony/**'
            - '.github/workflows/symfony.yaml'
    pull_request:
        branches: [main, dev]
        paths:
            - 'symfony/**'
            - '.github/workflows/symfony.yaml'

permissions:
    contents: read

jobs:
    test:
        runs-on: ubuntu-latest

        defaults:
            run:
                working-directory: symfony

        steps:
            - uses: actions/checkout@v4

            - uses: shivammathur/setup-php@2cb9b829437ee246e9b3cac53555a39208ca6d28
              with:
                php-version: '8.3.7'
                coverage: xdebug

            - name: Copy .env.test.local
              run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"

            - name: Cache Composer packages
              id: composer-cache
              uses: actions/cache@v3
              with:
                path: symfony/vendor
                key: ${{ runner.os }}-php-${{ hashFiles('symfony/composer.lock') }}
                restore-keys: |
                    ${{ runner.os }}-php-

            - name: Install Dependencies
              run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            - name: Create Database
              run: |
                mkdir -p data
                touch data/database.sqlite

            - name: Execute tests (Unit and Feature tests) via PHPUnit
              env:
                DATABASE_URL: sqlite:///%kernel.project_dir%/data/database.sqlite
              run: vendor/bin/phpunit --coverage-clover=coverage.xml

            - name: SonarQube Scan
              uses: SonarSource/sonarqube-scan-action@v4.1.0
              with:
                projectBaseDir: symfony
              env:
                  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                  SONAR_HOST_URL: ${{ vars.SONAR_HOST_URL }}